plugins {
  id 'groovy'
}

sourceSets {
  main {
    groovy {
      srcDirs = ['src','vars']
    }
    resources {
      srcDirs = ['resources']
    }
  }
  test {
    groovy {
      srcDirs = ['test']
    }
  }
}

repositories {
  mavenCentral()
  maven { url 'https://repo.jenkins-ci.org/public/' }
  maven { url 'https://repo.jenkins-ci.org/releases/' }
}

dependencies {
  implementation 'org.codehaus.groovy:groovy-all:2.5.17' // Groovy 3.x breaking
  implementation 'com.cloudbees:groovy-cps:1.32'
  implementation("org.jenkins-ci.plugins:job-dsl-core:${jobDslVersion}") {
    exclude module:'xstream'
  }
  testImplementation("org.jenkins-ci.main:jenkins-war:${jenkinsVersion}") {
    exclude group: 'org.jenkins-ci.ui',
    module: 'bootstrap' // https://github.com/sheehan/job-dsl-gradle-example/issues/87
  }

  testImplementation 'com.lesfurets:jenkins-pipeline-unit:1.9'
  testImplementation('junit:junit:4.13')
  testImplementation 'org.junit.vintage:junit-vintage-engine:5.4.1'
  testImplementation 'org.assertj:assertj-core:3.7.0'
  testImplementation 'cglib:cglib-nodep:3.2.2'
  testImplementation 'org.objenesis:objenesis:1.2'
  
  testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
  testImplementation 'net.bytebuddy:byte-buddy:1.9.12'
  
}
 
test {
  useJUnitPlatform()

  // Enable writing stacks with -Ppipeline.stack.write
  if (project.hasProperty("pipeline.stack.write")) {
    systemProperty "pipeline.stack.write", "true"
  }

  testLogging {
  events 'passed', 'skipped', 'failed'
  }
}

task propertyTypes(){
    doLast{
        if (project.hasProperty("args")) {
            println "Our input argument with project property ["+project.getProperty("args")+"]"
        }
        println "Our input argument with system property ["+System.getProperty("args")+"]"
    }
}
